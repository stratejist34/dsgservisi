---
import Header from '@components/common/Header.astro';
import Footer from '@components/common/Footer.astro';
import PhoneButton from '@components/common/PhoneButton';
import WhatsAppButton from '@components/common/WhatsAppButton';
import '@styles/global.css';
import '@styles/reveal.css';

interface Props {
  title: string;
  description: string;
  image?: string;
  noindex?: boolean;
}

const { 
  title, 
  description, 
  image = '/images/og-image.jpg',
  noindex = false 
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/webp" href="/images/icon.webp" />
  <link rel="icon" type="image/avif" href="/images/icon.avif" />
  <link rel="icon" type="image/png" href="/images/icon.png" />
  <link rel="canonical" href={canonicalURL} />
  
  {/* SEO Meta Tags */}
  <title>{title}</title>
  <meta name="description" content={description} />
  {noindex && <meta name="robots" content="noindex, nofollow" />}
  
  {/* Open Graph */}
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.site)} />
  
  {/* Twitter Card */}
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:url" content={canonicalURL} />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />
  <meta name="twitter:image" content={new URL(image, Astro.site)} />
  
  {/* Preload Critical Resources */}
      <link rel="dns-prefetch" href="https://www.googletagmanager.com" />
      <link rel="preload" href="/images/hero-bg.jpg" as="image" type="image/jpeg" fetchpriority="high" />
  
  {/* Critical CSS */}
  <style is:inline>
    body {
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      background-color: #ffffff;
      color: #1a202c; /* gray-900 */
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      text-rendering: optimizeLegibility;
      overflow-x: hidden;
      width: 100%;
      min-width: 320px;
    }
    .container {
      margin-left: auto;
      margin-right: auto;
      padding-left: 1rem; /* px-4 */
      padding-right: 1rem; /* px-4 */
      max-width: 1280px; /* max-w-7xl */
      width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      font-weight: 600; /* font-semibold */
    }
    h1 {
      font-size: 1.875rem; /* text-3xl */
      line-height: 2.25rem; /* leading-9 */
      font-weight: 700; /* font-bold */
    }
    @media (min-width: 768px) {
      .container {
        padding-left: 1.5rem; /* sm:px-6 */
        padding-right: 1.5rem; /* sm:px-6 */
      }
      h1 {
        font-size: 2.25rem; /* md:text-4xl */
        line-height: 2.5rem; /* md:leading-10 */
      }
    }
    @media (min-width: 1024px) {
      .container {
        padding-left: 2rem; /* lg:px-8 */
        padding-right: 2rem; /* lg:px-8 */
      }
      h1 {
        font-size: 2.25rem; /* lg:text-4xl */
        line-height: 2.5rem; /* lg:leading-10 */
      }
    }
  </style>

  {/* Optimize edilmiş Scroll ve Reveal Sistemi */}
  <style is:global>
    /* 1. Smooth scroll */
    html {
      scroll-behavior: smooth;
      scroll-padding-top: 80px;
    }

    /* 2. Reveal */
    [data-reveal] {
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.4s ease, transform 0.4s ease;
      will-change: opacity, transform;
    }
    .reveal--in {
      opacity: 1;
      transform: translateY(0);
      will-change: auto; /* animasyon bitince kaldır */
    }

    /* 3. Header */
    header {
      position: sticky;
      top: 0;
      transition: background 0.3s ease;
    }

    /* 4. Progress bar */
    .scroll-progress {
      position: fixed;
      top: 0;
      height: 3px;
      background: linear-gradient(90deg, cyan, blue);
      transition: width 0.1s ease;
    }

    @media (prefers-reduced-motion: reduce) {
      html { scroll-behavior: auto; }
      [data-reveal] { opacity: 1; transform: none; transition: none; }
    }
  </style>
  
  {/* Google Search Console Verification */}
  {import.meta.env.PUBLIC_GSC_VERIFICATION && (
    <meta name="google-site-verification" content={import.meta.env.PUBLIC_GSC_VERIFICATION} />
  )}
  
      
      <slot name="head" />
</head>
<body class="smooth-scroll">
  <Header />
  
  <main class="pt-20">
    <slot />
  </main>
  
      <Footer />
  
      {/* Floating Buttons */}
      <PhoneButton client:load />
      <WhatsAppButton client:load />

      {/* Optimize edilmiş Scroll ve Reveal Script */}
      <script is:inline>
        // Optimize edilmiş tek script
        let ticking = false;
        const header = document.querySelector('header');
        const progress = document.getElementById('progress');

        // Reveal
        const io = new IntersectionObserver((entries) => {
          entries.forEach(e => {
            if (e.isIntersecting) {
              e.target.classList.add('reveal--in');
              io.unobserve(e.target);
            }
          });
        }, { threshold: 0.15 });
        
        document.querySelectorAll('[data-reveal]').forEach(el => io.observe(el));

        // Scroll handler (throttled)
        window.addEventListener('scroll', () => {
          if (!ticking) {
            requestAnimationFrame(() => {
              // Header
              header?.classList.toggle('scrolled', window.scrollY > 20);
              
              // Progress
              if (progress) {
                const percent = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
                progress.style.width = `${percent}%`;
              }
              
              ticking = false;
            });
            ticking = true;
          }
        }, { passive: true });
      </script>

  {/* Google Analytics - Lazy loaded after interaction */}
  {import.meta.env.PUBLIC_GA_ID && (
    <script is:inline define:vars={{ gaId: import.meta.env.PUBLIC_GA_ID }}>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', gaId);
      
      // Lazy load GA script after user interaction
      let gaLoaded = false;
      function loadGA() {
        if (gaLoaded) return;
        gaLoaded = true;
        const script = document.createElement('script');
        script.async = true;
        script.src = `https://www.googletagmanager.com/gtag/js?id=${gaId}`;
        document.head.appendChild(script);
      }
      
      // Load on user interaction or after 3 seconds
      ['mousedown', 'touchstart', 'scroll', 'keydown'].forEach(event => {
        window.addEventListener(event, loadGA, { once: true, passive: true });
      });
      setTimeout(loadGA, 3000);
    </script>
  )}
</body>
</html>

